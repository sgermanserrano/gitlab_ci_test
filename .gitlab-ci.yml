image: ubuntu:xenial

stages:
  - build
  - deploy
  
variables:
  ROS_CI_DESKTOP: "`lsb_release -cs`"
  CI_SOURCE_PATH: $CI_PROJECT_DIR
  ROSINSTALL_FILE: $CI_SOURCE_PATH/dependencies.rosinstall
  CATKIN_OPTIONS: $CI_SOURCE_PATH/catkin.options
  PYTHONPATH: ${PYTHONPATH}:/usr/lib/python2.7/dist-packages:/usr/local/lib/python2.7/dist-packages
  ROS_DISTRO: kinetic
  
build:
  stage: build
  before_script:
    - echo $HOME
    - apt-get update
    - apt-get install -y lsb-release lcov
    - apt-get install -y gcc g++
    - sh -c "echo \"deb http://packages.ros.org/ros/ubuntu $ROS_CI_DESKTOP main\" > /etc/apt/sources.list.d/ros-latest.list"
    - apt-key adv --keyserver hkp://ha.pool.sks-keyservers.net:80 --recv-key 421C365BD9FF1F717815A3895523BAEEB01FA116
    - apt-get update
    - apt-get install -y dpkg
    - apt-get install -y python-catkin-pkg python-rosdep python-wstool ros-${ROS_DISTRO}-catkin
    - source /opt/ros/${ROS_DISTRO}/setup.bash
    - rosdep init
    - rosdep update
    - cd src
    - wstool init
    - test -f "${ROSINSTALL_FILE}" && wstool merge "${ROSINSTALL_FILE}"
    - wstool up
    - cd ..
    - rosdep install -y --from-paths src --ignore-src --rosdistro ${ROS_DISTRO} 
    - echo $CI_PROJECT_DIR
    - echo $ROS_HOME
  script:
    - catkin_make --cmake-args -DCOVERAGE=ON -DCMAKE_BUILD_TYPE=Debug
    - echo $ROS_HOME
    - lcov --initial --directory build --capture --output-file lcov.base
    - catkin_make run_tests
    - lcov --directory build --capture --output-file lcov.test
    - lcov -a lcov.base -a lcov.test -o lcov.total
    - lcov -r lcov.total 'tests/*' '/usr/*' '/opt/*' '*/CMakeCCompilerId.c' '*/CMakeCXXCompilerId.cpp' -o lcov.total.filtered
    - genhtml -p "$PWD" --legend --demangle-cpp lcov.total.filtered -o coverage
    - tar -czvf coverage.tar.gz coverage
  artifacts:
    paths:
      - coverage.tar.gz
    expire_in: 20 mins
         
pages:
  stage: deploy
  image: alpine
  dependencies:
    - build
  script:
    - tar -xzvf coverage.tar.gz
    - echo $CI_COMMIT_REF_NAME
    - mv coverage public
  artifacts:
    name: "$CI_JOB_NAME"
    paths:
      - public

